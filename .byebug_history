quit
params
@portfolio = @customer.portfolios.find(params[:id])
continue
n
@customer = Customer.find(params[:customer_id] || params[:id])
continue
@customer
continue
Customer.find(params[:customer_id] || params[:id])
continue
n
Customer.find(params[:customer_id] || params[:id])
continue
expect(json['contracts']).to be_an(Array)
json['contracts']
continue
n
json['contracts'].first['label']
json['contracts']
continue
Portfolio
continue
portfolio_label
Portfolio.find_by(label: portfolio_label)
continue
n
json_data
n
file
n
continue
(portfolio_investment.amount_invested.to_f / portfolio.total_amount.to_f)
(portfolio_investment.amount_invested.to_f / portfolio.total_amount.to_f) * 100
(portfolio_investment.amount_invested.to_f / portfolio.total_amount.to_f) * 100)
portfolio_investment.amount_invested.to_f / portfolio.total_amount.to_f) * 100
portfolio.total_amount.to_f
portfolio_investment.amount_invested.to_f
portfolio_investment
investment_data
n
continue
investment_data
portfolio_investment.amount_invested.to_f
n
investment_data['label']
investment_data
investment.label
investment.labe
investment_data = portfolio_data['lines'].first
continue
portfolio_data['lines'].first
portfolio_data['lines']
portfolio_data
continue
portfolio_data['lines'].first
portfolio_data['lines']
portfolio_data['investments']
portfolio_data
continue
portfolio_data.first
portfolio_data["contracts"]
portfolio_data
continue
json.first['contracts']
json['contracts'].first["lines"].first["label"]
json['contracts'].first["lines"].first["label]
json['contracts'].first["lines"].first
json['contracts'].first["lines"]["label"]
investment.label
json['contracts'].first["lines"]
json['contracts'].first
json['contracts']['lines']
json['contracts']
json['lines']
json['contracts']
json
investment_data['label']
portfolio_data.first
portfolio_data["contracts"]
portfolio_data[contracts]
portfolio_data["contracts"]
portfolio_data
investment_data
continue
json['contracts']
json['contracts'].first['total_amount']
continue
json['contracts'].first['label']
json['contracts'].first
json['contracts']
json['contracts']['label']
json['contracts']
json
json.first['label']
json.first['label'])
portfolio.label
continue
expect(json['contracts']).to be_an(Array)
expect(json['contracts'])
expect(json).['contracts']
json
continue
allocation
n
 amounts_by_type
n
amounts_by_type.key?(type)
data
amount
type
continue
70000.0 / 50000.0
sum / total
(sum / total).round(2)
total
sum = data.sum { |d| d[:sri].to_f * d[:amount] }
data
continue
weighted_risk(investment_data, total)
total
investment_data
portfolio.id
continue
portfolios.map(&:portfolio_investments)
portfolios.flat_map(&:portfolio_investments)
portfolios.sum(&:total_amount).to_f
portfolios.map(&:portfolio_investments)
portfolios.flat_map(&:portfolio_investments)
continue
portfolio.portfolio_investments
portfolio.total_amount.to_f
portfolio.total_amount
portfolios
continue
n
customer.portfolios
n
customer = Customer.find(params[:id])
